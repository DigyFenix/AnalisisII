package Views;

import Views.Utils.VBusqueda;
import Controladores.DaoEmpresa;
import Controladores.DaoNomina;
import DigyFenix.*;
import Enums.BusquedaFrame;
import Modelos.Empresa;
import Modelos.Nomina;
import Modelos.Periodo;
import Utils.HbUtils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashMap;
import javax.persistence.EntityManager;
import org.hibernate.Session;
import org.hibernate.jdbc.Work;

/**
 *
 * @author echacon
 */
public class VGeneraNomina extends javax.swing.JInternalFrame {

    HashMap<String, Object> mapFields = new HashMap<>();

    Periodo per = new Periodo();

    /**
     * Creates new form v_empresa
     */
    public VGeneraNomina() {
        initComponents();

        DFUtils.setColorABotton(btnTrasladar);
        DFUtils.setColorABotton(btnEmpBusqueda);
        DFUtils.setColorABotton(btnNuevo);

    }

    public void busquedaFinalizada(Object obj) {
        try {
            if (obj instanceof Periodo) {
                per = (Periodo) obj;
                Nomina nom = new DaoNomina().buscarPorId(per.getIdnomina());
                Empresa emp = new DaoEmpresa().buscarPorId(nom.getIdempresa());
                txbPeriodo.setText(per.getDescripcion() + " - desde la fecha " + DFDate.get_fecha(per.getFechaInicio()) + " hasta la fecha " + DFDate.get_fecha(per.getFechaFin()));
                txbNomina.setText(emp.getDescripcion() + " - " + nom.getDescripcion());
            }
        } catch (Exception e) {
            DFOptionPane.mostrar_Error(e.getMessage());
        }

    }

    private void trasadarExcel() {
        try {
            String sql = "select "
                    + "a.idrh_dc_enc idGeneracion, a.no_asiento, a.cod_diario, a.descripcion , "
                    + "f.descripcion empresa, a.idnomina, e.descripcion descripcion_nomina, b.cuenta_contable, g.descripcion departamento, "
                    + "b.idempleado, concat(d.nombre, \" \",d.apellido) empleado, b.idmovimiento, c.descripcion movimiento, b.monto "
                    + "from rh_dc_enc a "
                    + "inner join rh_dc_det b on a.idrh_dc_enc = b.idrh_dc_enc "
                    + "inner join rh_movimiento c on b.idmovimiento = c.idrh_movimiento  "
                    + "inner join rh_empleado d on b.idempleado = d.idrh_empleado  "
                    + "inner join rh_nomina e on a.idnomina  = e.idrh_nomina "
                    + "inner join rh_empresa f on e.idempresa = f.idrh_empresa "
                    + "inner join rh_departamento  g on d.iddepartamento = g.iddepartamento "
                    + "where a.idnomina = " + per.getIdnomina() + " and DATE_FORMAT(b.fecha_desde, \"%d-%m-%Y\") = '" + DFDate.get_fecha(per.getFechaInicio()) + "' "
                    + "and DATE_FORMAT(b.fecha_hasta, \"%d-%m-%Y\") = '" + DFDate.get_fecha(per.getFechaFin()) + "' ";
            VPrincipal.generarExcel(sql, txbPeriodo.getText());
        } catch (Exception e) {
            DFOptionPane.mostrar_Error(e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTrasladar = new javax.swing.JButton();
        txbNomina = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnEmpBusqueda = new javax.swing.JButton();
        txbPeriodo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Generacion de nomina");
        setMaximumSize(new java.awt.Dimension(707, 210));
        setMinimumSize(new java.awt.Dimension(707, 210));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(707, 210));
        getContentPane().setLayout(null);

        btnTrasladar.setBackground(new java.awt.Color(0, 153, 102));
        btnTrasladar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnTrasladar.setForeground(new java.awt.Color(255, 255, 255));
        btnTrasladar.setText("Trasladar a excel");
        btnTrasladar.setBorder(null);
        btnTrasladar.setBorderPainted(false);
        btnTrasladar.setContentAreaFilled(false);
        btnTrasladar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTrasladar.setOpaque(false);
        btnTrasladar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrasladarActionPerformed(evt);
            }
        });
        getContentPane().add(btnTrasladar);
        btnTrasladar.setBounds(420, 110, 140, 40);
        getContentPane().add(txbNomina);
        txbNomina.setBounds(180, 60, 500, 30);

        jLabel6.setText("Nomina");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 60, 100, 20);

        btnNuevo.setBackground(new java.awt.Color(0, 153, 102));
        btnNuevo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Generar");
        btnNuevo.setBorder(null);
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.setOpaque(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo);
        btnNuevo.setBounds(200, 110, 120, 40);

        btnEmpBusqueda.setBackground(new java.awt.Color(0, 153, 102));
        btnEmpBusqueda.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEmpBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        btnEmpBusqueda.setText("B");
        btnEmpBusqueda.setBorder(null);
        btnEmpBusqueda.setBorderPainted(false);
        btnEmpBusqueda.setContentAreaFilled(false);
        btnEmpBusqueda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEmpBusqueda.setOpaque(false);
        btnEmpBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpBusquedaActionPerformed(evt);
            }
        });
        getContentPane().add(btnEmpBusqueda);
        btnEmpBusqueda.setBounds(140, 20, 40, 30);
        getContentPane().add(txbPeriodo);
        txbPeriodo.setBounds(180, 20, 500, 30);

        jLabel7.setText("Periodo a generar");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 20, 130, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTrasladarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrasladarActionPerformed
        if (per.getIdrhPeriodo() != null) {
            trasadarExcel();
        } else {
            DFOptionPane.mostrar_Error("Debe seleccionar un periodo");
        }

    }//GEN-LAST:event_btnTrasladarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        if (per.getIdrhPeriodo() != null) {
            EntityManager em = HbUtils.getEntityManager();
            em.getTransaction().begin();
            Session session = em.unwrap(Session.class);
            session.doWork(new Work() {
                @Override
                public void execute(Connection cnctn) throws SQLException {
                    try (PreparedStatement pstm = cnctn.prepareStatement("call generaNomina(" + per.getIdrhPeriodo() + ") ")) {
                        pstm.executeUpdate();
                        DFOptionPane.mostrar_Realizado("Nomina generada corretamente\nPara ver los datos, traslade a excel.");
                    } catch (Exception e) {
                        DFOptionPane.mostrar_Error(e.toString());
                    }
                }
            });
            em.getTransaction().commit();
            em.close();

        } else {
            DFOptionPane.mostrar_Error("Debe seleccionar un periodo");
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEmpBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpBusquedaActionPerformed
        new VBusqueda(null, this, BusquedaFrame.VGENERANOMINA, per);
    }//GEN-LAST:event_btnEmpBusquedaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEmpBusqueda;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnTrasladar;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txbNomina;
    private javax.swing.JTextField txbPeriodo;
    // End of variables declaration//GEN-END:variables

}
