package Views;

import Controladores.DaoMovimiento;
import DigyFenix.*;
import Enums.InsertUpdate;
import Modelos.Movimiento;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author echacon
 */
public class VMovimientos extends javax.swing.JInternalFrame {

    HashMap<String, Object> mapFields = new HashMap<>();
    Movimiento mov;
    DaoMovimiento daoMov;

    /**
     * Creates new form v_empresa
     */
    public VMovimientos() {
        initComponents();

        //Inicio las variables
        nuevaMovimiento();
        daoMov = new DaoMovimiento();

        //Configuro los botonos
        DFUtils.setColorABotton(btnGuardar);
        DFUtils.setColorABotton(btnNuevo);

        generarSwitchMap();
        mapearFiels();

        llenarTablaMovimientos();

        mov.limpiarFields(true);
        mov.fieldsActivados(false);

    }

    private void mapearFiels() {
        System.out.println("mapearFiels:" + DFUtils.getMapearFiels(mov.getVariables()));
        mapFields.put("descripcion", txbDescripcion);
        mapFields.put("porcSobreBase", chkPorcentaje);
        mapFields.put("montoFijo", chkMontoFijo);
        mapFields.put("monto", txbMonto);
        mapFields.put("tipo", cbxTipo);
        mapFields.put("automatico", chkAutomatico);
        mapFields.put("activo", cbxActivo);        
        mov.mapearFields(mapFields);

    }

    private void generarSwitchMap() {
        System.out.println("generarSwitchMap: " + DFUtils.getGenerarSwitchMap(mov.getVariables()));
        HashMap<String, DFMvcEnum> mapFields = new HashMap<>();
        mapFields.put("descripcion", DFMvcEnum.STRING);
        mapFields.put("porcSobreBase", DFMvcEnum.STRING);
        mapFields.put("montoFijo", DFMvcEnum.STRING);
        mapFields.put("monto", DFMvcEnum.FLOAT);
        mapFields.put("tipo", DFMvcEnum.STRING);
        mapFields.put("automatico", DFMvcEnum.STRING);
        mapFields.put("activo", DFMvcEnum.STRING);
        System.out.println(DFUtils.getSwitchParaMvc(mapFields));
    }

    private void guardar() {
        try {
            boolean nueva = (mov.getIdrhMovimiento() == null);
            //Primero se guardan los datos auxiliares para actualizar ids

            String tipo = "";
            if (nueva) {
                daoMov.insertarActualizar(mov, InsertUpdate.INSERTAR);
                tipo = "insertado";
            } else {
                daoMov.insertarActualizar(mov, InsertUpdate.ACTUALIZAR);
                tipo = "actualizado";
            }
            llenarTablaMovimientos();
            DFOptionPane.mostrar_Realizado(mov.getClass().getSimpleName() + " " + tipo + " corretamente");
            nuevaMovimiento();
        } catch (Exception e) {
            DFOptionPane.mostrar_Error(e.toString());
        }
    }

    private void nuevaMovimiento() {
        mov = new Movimiento();
        mov.setAutomatico("N");
        mov.setMontoFijo("N");
        mov.setPorcSobreBase("N");
        mov.mapearFields(mapFields);
        mov.limpiarFields(true);
        txbDescripcion.requestFocus();
        mov.fieldsActivados(true);
    }

    private void llenarTablaMovimientos() {
        String encabezado[] = {"Id", "Descripcion", "Monto", "Tipo", "Automatico", "Por %", "Monto Fijo"};
        List<Movimiento> list = daoMov.listar();
        List<String[]> rows = new ArrayList<>();
        list.forEach((t) -> {
            try {
                String row[] = {"" + t.getIdrhMovimiento(), t.getDescripcion(), "" + t.getMonto(), t.getTipo(), t.getAutomatico(), t.getPorcSobreBase(), t.getMontoFijo()};
                rows.add(row);
            } catch (Exception e) {
            }
        });

        DFTable.llenarTablaCol0NoEditable(tblNominas, encabezado, rows);
    }

    private void cargarDetalle(String id) {
        try {
            mov = daoMov.buscarPorId(Integer.parseInt(id));
            mov.mapearFields(mapFields);
            mov.llenarFields();
            mov.fieldsActivados(true);
        } catch (Exception e) {
            DFOptionPane.mostrar_Error(e.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblNominas = new javax.swing.JTable();
        tblNominas.getSelectionModel().addListSelectionListener( 
            new ListSelectionListener(){
                public void valueChanged(ListSelectionEvent event){
                    if(!event.getValueIsAdjusting() && (tblNominas.getSelectedRow() >= 0)){
                        cargarDetalle(""+tblNominas.getValueAt(tblNominas.getSelectedRow(), 0));
                    }
                }
            }
        );
        txbDescripcion = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        chkPorcentaje = new javax.swing.JCheckBox();
        chkMontoFijo = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        cbxTipo = new javax.swing.JComboBox<>();
        txbMonto = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        chkAutomatico = new javax.swing.JCheckBox();
        cbxActivo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Administracion de movimientos");
        setMaximumSize(new java.awt.Dimension(815, 336));
        setMinimumSize(new java.awt.Dimension(815, 336));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(815, 336));
        getContentPane().setLayout(null);

        tblNominas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblNominas);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 10, 780, 160);
        getContentPane().add(txbDescripcion);
        txbDescripcion.setBounds(10, 200, 230, 30);

        jLabel19.setText("Descripcion");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(10, 180, 120, 16);

        btnGuardar.setBackground(new java.awt.Color(0, 153, 102));
        btnGuardar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setOpaque(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar);
        btnGuardar.setBounds(470, 250, 94, 40);

        btnNuevo.setBackground(new java.awt.Color(0, 153, 102));
        btnNuevo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Nuevo");
        btnNuevo.setBorder(null);
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.setOpaque(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo);
        btnNuevo.setBounds(320, 250, 93, 40);

        chkPorcentaje.setText("Es % sobre base");
        chkPorcentaje.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkPorcentajeStateChanged(evt);
            }
        });
        getContentPane().add(chkPorcentaje);
        chkPorcentaje.setBounds(560, 190, 121, 20);

        chkMontoFijo.setText("Es monto fijo");
        chkMontoFijo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkMontoFijoStateChanged(evt);
            }
        });
        getContentPane().add(chkMontoFijo);
        chkMontoFijo.setBounds(560, 220, 101, 20);

        jLabel20.setText("Tipo");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(330, 180, 80, 16);

        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "INGRESO", "EGRESO" }));
        getContentPane().add(cbxTipo);
        cbxTipo.setBounds(330, 200, 90, 30);
        getContentPane().add(txbMonto);
        txbMonto.setBounds(240, 200, 70, 30);

        jLabel21.setText("Monto");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(240, 180, 70, 16);

        chkAutomatico.setText("Automatico");
        getContentPane().add(chkAutomatico);
        chkAutomatico.setBounds(440, 200, 93, 30);

        cbxActivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activa", "Inactiva" }));
        getContentPane().add(cbxActivo);
        cbxActivo.setBounds(710, 200, 80, 30);

        jLabel5.setText("Estado");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(710, 180, 70, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        nuevaMovimiento();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void chkMontoFijoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkMontoFijoStateChanged
        if (chkMontoFijo.isSelected()) {
            chkPorcentaje.setSelected(false);
            mov.setMontoFijo("S");
            mov.setPorcSobreBase("N");
        } else {
            mov.setMontoFijo("N");
        }
    }//GEN-LAST:event_chkMontoFijoStateChanged

    private void chkPorcentajeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkPorcentajeStateChanged
        if (chkPorcentaje.isSelected()) {
            chkMontoFijo.setSelected(false);
            mov.setPorcSobreBase("S");
            mov.setMontoFijo("N");
        } else {
            mov.setPorcSobreBase("N");
        }
    }//GEN-LAST:event_chkPorcentajeStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cbxActivo;
    private javax.swing.JComboBox<String> cbxTipo;
    private javax.swing.JCheckBox chkAutomatico;
    private javax.swing.JCheckBox chkMontoFijo;
    private javax.swing.JCheckBox chkPorcentaje;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblNominas;
    private javax.swing.JTextField txbDescripcion;
    private javax.swing.JTextField txbMonto;
    // End of variables declaration//GEN-END:variables

}
